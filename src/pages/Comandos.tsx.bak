import React, { useState } from 'react';
import { MessageCircle, Command, Bot, ArrowLeft, Settings, Search, Users, Bell, Calendar, FileText, HelpCircle } from 'lucide-react';
import { Link } from 'react-router-dom';

interface Comando {
  icon: React.ReactNode;
  name: string;
  description: string;
  usage: string;
  examples: string[];
  type: {
    name: string;
    color: string;
  };
}

function Comandos() {
  const [comandoSelecionado, setComandoSelecionado] = useState<Comando | null>(null);

  const comandos: Comando[] = [
  
    {
      icon: <MessageCircle className="w-6 h-6" />,
      name: '/warn',
      description: 'Dá uma advertência a um usuário, marcando ou respondendo a sua mensagem',
      usage: '/warn @usuario',
      examples: [
        '/warn @josedefreitas',
      ],
      type: {
        name: 'Moderação',
        color: 'bg-yellow-500'
      }
    },
    {
      icon: <Settings className="w-6 h-6" />,
      name: '/delwarn',
      description: 'Retira uma advertência de um usuário ',
      usage: '/delwarn @usuario',
      examples: [
        '/delwarn @jose',
      ],
      type: {
        name: 'Moderação',
        color: 'bg-yellow-500'
      }
    },
    {
      icon: <Search className="w-6 h-6" />,
      name: '/warnlimit',
      description: 'Define o máximo de advertências permitidas por usuário no grupo, quando atingir o máximo, remove o usuário automaticamente',
      usage: '/warnlimit [quantidade]',
      examples: [
        '/warnlimit 4'
      ],
      type: {
        name: 'Configuração',
        color: 'bg-yellow-500'
      }
    },
    {
      icon: <Users className="w-6 h-6" />,
      name: '/gpt',
      description: 'Faz uma busca ou interação com o chat gpt',
      usage: '/gpt [pesquisa]',
      examples: [
        '/gpt o que é hello world </>',
      ],
      type: {
        name: 'Interação',
        color: 'bg-blue-500'
      }
    },
    {
      icon: <Bell className="w-6 h-6" />,
      name: '/dallas ',
      description: 'Interaja com o dallas bot de maneira divertida',
      usage: 'dallas [ interage ]',
      examples: [
        '/dalas  [ interage ]',
        '/dalas  [ interage ]'
      ],
      type: {
        name: 'Interação',
        color: 'bg-blue-500'
      }
    },
    {
      icon: <Calendar className="w-6 h-6" />,
      name: '/agenda',
      description: 'Gerencia sua agenda e compromissos',
      usage: '/agenda [ação]',
      examples: [
        '/agenda hoje',
        '/agenda adicionar "Reunião" amanhã 15h'
      ],
      type: {
        name: 'Utilitário',
        color: 'bg-yellow-500'
      }
    },
    {
      icon: <FileText className="w-6 h-6" />,
      name: '/notas',
      description: 'Cria e gerencia notas rápidas',
      usage: '/notas [ação]',
      examples: [
        '/notas criar "Lista de compras"',
        '/notas listar'
      ],
      type: {
        name: 'Utilitário',
        color: 'bg-yellow-500'
      }
    }
  ];

  return (
    <div className="min-h-screen bg-gray-900 text-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="flex items-center gap-4 mb-8">
          <Link to="/" className="inline-flex items-center text-gray-400 hover:text-white transition-colors">
            <ArrowLeft className="w-5 h-5 mr-2" />
            Voltar
          </Link>
          <h1 className="text-3xl font-bold">Comandos Disponíveis</h1>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {comandos.map((comando, index) => (
            <button
              key={index}
              onClick={() => setComandoSelecionado(comando)}
              className="relative text-left bg-gray-800/50 p-6 rounded-lg border border-gray-700 hover:border-blue-500/50 transition-all duration-200"
            >
              <span className={`absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-medium ${comando.type.color} bg-opacity-20 text-white`}>
                {comando.type.name}
              </span>
              <div className="text-blue-400 mb-4">{comando.icon}</div>
              <h3 className="text-xl font-semibold text-white mb-2">{comando.name}</h3>
              <p className="text-gray-400">{comando.description}</p>
            </button>
          ))}
        </div>

        {/* Modal de Detalhes do Comando */}
        {comandoSelecionado && (
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50">
            <div className="bg-gray-800 rounded-lg p-6 max-w-2xl w-full">
              <div className="flex justify-between items-start mb-6">
                <div className="flex items-center gap-3">
                  <div className="text-blue-400">{comandoSelecionado.icon}</div>
                  <div>
                    <h3 className="text-2xl font-bold">{comandoSelecionado.name}</h3>
                    <span className={`inline-block mt-1 px-2 py-1 rounded-full text-xs font-medium ${comandoSelecionado.type.color} bg-opacity-20 text-white`}>
                      {comandoSelecionado.type.name}
                    </span>
                  </div>
                </div>
                <button
                  onClick={() => setComandoSelecionado(null)}
                  className="text-gray-400 hover:text-white"
                >
                  <ArrowLeft className="w-5 h-5" />
                </button>
              </div>
              
              <div className="space-y-4">
                <div>
                  <h4 className="text-sm font-medium text-gray-400 mb-1">Descrição</h4>
                  <p className="text-white">{comandoSelecionado.description}</p>
                </div>
                
                <div>
                  <h4 className="text-sm font-medium text-gray-400 mb-1">Como Usar</h4>
                  <code className="bg-gray-900 px-3 py-2 rounded-lg block text-blue-400">
                    {comandoSelecionado.usage}
                  </code>
                </div>

                <div>
                  <h4 className="text-sm font-medium text-gray-400 mb-1">Exemplos</h4>
                  <div className="space-y-2">
                    {comandoSelecionado.examples.map((example, index) => (
                      <code key={index} className="bg-gray-900 px-3 py-2 rounded-lg block text-green-400">
                        {example}
                      </code>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default Comandos;